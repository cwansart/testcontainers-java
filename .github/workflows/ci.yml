
# This file is generated by .github/workflows/scripts/generate_github_ci.sh
# DO NOT HAND EDIT
name: CI

on:
  pull_request: {}
  push: { branches: [ master ] }

jobs:
    core_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-core_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (testcontainers:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache testcontainers:check
    module_selenium_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_selenium_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_selenium_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (selenium:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache selenium:check
    module_neo4j_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_neo4j_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_neo4j_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (neo4j:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache neo4j:check
    module_clickhouse_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_clickhouse_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_clickhouse_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (clickhouse:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache clickhouse:check
    module_postgresql_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_postgresql_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_postgresql_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (postgresql:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache postgresql:check
    module_dynalite_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_dynalite_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_dynalite_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (dynalite:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache dynalite:check
    module_presto_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_presto_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_presto_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (presto:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache presto:check
    module_jdbc-test_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_jdbc-test_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_jdbc-test_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (jdbc-test:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache jdbc-test:check
    module_mariadb_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_mariadb_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_mariadb_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (mariadb:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache mariadb:check
    module_mockserver_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_mockserver_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_mockserver_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (mockserver:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache mockserver:check
    module_oracle-xe_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_oracle-xe_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_oracle-xe_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (oracle-xe:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache oracle-xe:check
    module_rabbitmq_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_rabbitmq_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_rabbitmq_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (rabbitmq:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache rabbitmq:check
    module_jdbc_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_jdbc_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_jdbc_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (jdbc:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache jdbc:check
    module_influxdb_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_influxdb_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_influxdb_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (influxdb:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache influxdb:check
    module_nginx_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_nginx_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_nginx_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (nginx:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache nginx:check
    module_kafka_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_kafka_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_kafka_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (kafka:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache kafka:check
    module_cassandra_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_cassandra_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_cassandra_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (cassandra:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache cassandra:check
    module_mysql_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_mysql_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_mysql_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (mysql:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache mysql:check
    module_junit-jupiter_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_junit-jupiter_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_junit-jupiter_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (junit-jupiter:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache junit-jupiter:check
    module_mssqlserver_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_mssqlserver_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_mssqlserver_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (mssqlserver:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache mssqlserver:check
    module_spock_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_spock_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_spock_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (spock:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache spock:check
    module_db2_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_db2_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_db2_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (db2:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache db2:check
    module_localstack_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_localstack_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_localstack_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (localstack:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache localstack:check
    module_cockroachdb_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_cockroachdb_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_cockroachdb_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (cockroachdb:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache cockroachdb:check
    module_pulsar_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_pulsar_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_pulsar_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (pulsar:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache pulsar:check
    module_database-commons_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_database-commons_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_database-commons_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (database-commons:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache database-commons:check
    module_toxiproxy_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_toxiproxy_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_toxiproxy_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (toxiproxy:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache toxiproxy:check
    module_elasticsearch_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_elasticsearch_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_elasticsearch_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (elasticsearch:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache elasticsearch:check
    module_orientdb_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_orientdb_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_orientdb_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (orientdb:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache orientdb:check
    module_vault_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_vault_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_vault_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (vault:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache vault:check
    module_couchbase_check:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-module_couchbase_check-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-module_couchbase_check-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (couchbase:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache couchbase:check
    examples:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-examples-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-examples-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (-p examples check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache -p examples check
    docs_examples_junit4_generic:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-docs_examples_junit4_generic-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-docs_examples_junit4_generic-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (docs:examples:junit4:generic:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache docs:examples:junit4:generic:check
    docs_examples_junit4_redis:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-docs_examples_junit4_redis-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-docs_examples_junit4_redis-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (docs:examples:junit4:redis:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache docs:examples:junit4:redis:check
    docs_examples_junit5_redis:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-docs_examples_junit5_redis-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-docs_examples_junit5_redis-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (docs:examples:junit5:redis:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache docs:examples:junit5:redis:check
    docs_examples_spock_redis:
        runs-on: ubuntu-18.04
        steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v1
            with:
              java-version: '1.8'
          - name: Cache Gradle Home files
            uses: actions/cache@v1
            with:
              path: ~/.gradle/caches
              key: ${{ runner.os }}-gradle-home-docs_examples_spock_redis-${{ hashFiles('**/*.gradle') }}
              restore-keys: |
                            ${{ runner.os }}-gradle-home-docs_examples_spock_redis-
                            ${{ runner.os }}-gradle-home-core_check-
                            ${{ runner.os }}-gradle-home-
          - name: Clear existing docker image cache
            run: docker image prune -af
          - name: Build with Gradle (docs:examples:spock:redis:check)
            run: |
                ./gradlew --no-daemon --continue --scan --info --no-build-cache docs:examples:spock:redis:check
